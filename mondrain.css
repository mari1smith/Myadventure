html, body {
	margin: 0;
	padding: 0;
	width: 100vw;
	height: 100vh;
	
}

img {
	content:url(mondrain.png);
}

.flex-container {
	display: flex;
	flex-wrap: wrap;
}

/* https://philipwalton.github.io/solved-by-flexbox/demos/vertical-centering/ */
/* If you're using 'display: flex' this class can be used to easily center horizontally! */
.center-horizontal {
	display: flex;
	align-items: center;	
}

/* If you're using 'display: flex' this class can be used to easily center vertically! */
.center-vertical {
	display: flex;
	justify-content: center;
	height: inherit;
}

.wide-col {
	height: 100vh;
	width: 75vw;
}

/* The display value is set to block so the two child DIVs will stack on top of eachother */
.narrow-col {
	height: 100vh;
	width: 25vw;
	display: block;
}

.blue {
	background-color: #0D11A8;
}

.red {
	background-color: #F50F0F;
	height: 100%;
}

.yellow {
	background-color: #FAE317;
	height: 50%
}
@media screen and (max-width:500px) {
	.flex-container {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
	width: 100vw;
	height: 100vh;
}

img {
	content:url(mondrain.png);
	max-width:200px;
	overflow:hidden;
	
	
}

.center-horizontal {
	display: block;
	align-items: center;	
}

.center-vertical {
	display: block;
	justify-content: center;
	height: inherit;
}

.wide-col {
	height: 40vh;
	width: 100vw;
	display:block;
}

.narrow-col {
	height: 80vh;
	width: 100vw;
	display: block;
}

.blue {
	background-color: #0D11A8;
}

.red {
	background-color: #F50F0F;
	height: 55%;
	width:100%;
}

.yellow {
	background-color: #FAE317;
	height: 55%;
	width:100%;
}


}
}